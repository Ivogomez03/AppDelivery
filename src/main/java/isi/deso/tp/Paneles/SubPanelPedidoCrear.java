/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package isi.deso.tp.Paneles;

import isi.deso.controller.PedidoController;
import isi.deso.controller.ValidationController;
import isi.deso.model.Plato;
import isi.deso.model.Bebida;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Francisco
 */
public class SubPanelPedidoCrear extends javax.swing.JPanel {
    PedidoController controllerpedido = new PedidoController();
    ValidationController controllervalidation = new ValidationController();
    int opcion;
    /**
     * Creates new form SubPanelVendedor
     */
    public SubPanelPedidoCrear() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BCrear = new javax.swing.JButton();
        BCerrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TextoCuit = new javax.swing.JTextField();
        TextoDni = new javax.swing.JTextField();
        CatalogoItems = new javax.swing.JTabbedPane();
        PanelPlatos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPlatos = new javax.swing.JTable();
        BotonAgregarPlato = new javax.swing.JButton();
        PanelSinTacc = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TablaPlatosSinTACC = new javax.swing.JTable();
        BotonAgregarSinTacc = new javax.swing.JButton();
        PanelBebidas = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaBebida = new javax.swing.JTable();
        BotonAgregarBebida = new javax.swing.JButton();
        PanelBebidasConAlcohol = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaBebidaAlcoholica = new javax.swing.JTable();
        BotonAgregarBebidaAlcoholicas = new javax.swing.JButton();
        BotonGenerarItem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaItemSeleccionado = new javax.swing.JTable();
        BotonEliminarSeleccion = new javax.swing.JButton();

        BCrear.setText("Crear");

        BCerrar.setText("Cerrar");
        BCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCerrarActionPerformed(evt);
            }
        });

        jLabel8.setText("Cuit Cliente");

        jLabel9.setText("Dni Vendedor");

        TextoCuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoCuitActionPerformed(evt);
            }
        });

        CatalogoItems.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CatalogoItems.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        CatalogoItems.setToolTipText("");
        CatalogoItems.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CatalogoItems.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CatalogoItemsStateChanged(evt);
            }
        });

        TablaPlatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categoria", "Nombre", "Precio", "Mas Info"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaPlatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPlatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaPlatos);
        if (TablaPlatos.getColumnModel().getColumnCount() > 0) {
            TablaPlatos.getColumnModel().getColumn(0).setResizable(false);
            TablaPlatos.getColumnModel().getColumn(1).setResizable(false);
            TablaPlatos.getColumnModel().getColumn(2).setResizable(false);
            TablaPlatos.getColumnModel().getColumn(3).setPreferredWidth(5);
        }

        BotonAgregarPlato.setText("Agregar Item Seleccionado");
        BotonAgregarPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarPlatoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPlatosLayout = new javax.swing.GroupLayout(PanelPlatos);
        PanelPlatos.setLayout(PanelPlatosLayout);
        PanelPlatosLayout.setHorizontalGroup(
            PanelPlatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPlatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPlatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(BotonAgregarPlato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelPlatosLayout.setVerticalGroup(
            PanelPlatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPlatosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAgregarPlato))
        );

        CatalogoItems.addTab("PLATOS", PanelPlatos);

        TablaPlatosSinTACC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categoria", "Nombre", "Precio", "Mas Info"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaPlatosSinTACC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPlatosSinTACCMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(TablaPlatosSinTACC);
        if (TablaPlatosSinTACC.getColumnModel().getColumnCount() > 0) {
            TablaPlatosSinTACC.getColumnModel().getColumn(0).setResizable(false);
            TablaPlatosSinTACC.getColumnModel().getColumn(1).setResizable(false);
            TablaPlatosSinTACC.getColumnModel().getColumn(2).setResizable(false);
            TablaPlatosSinTACC.getColumnModel().getColumn(3).setResizable(false);
            TablaPlatosSinTACC.getColumnModel().getColumn(3).setPreferredWidth(5);
        }

        BotonAgregarSinTacc.setText("Agregar Item Seleccionado");
        BotonAgregarSinTacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarSinTaccActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelSinTaccLayout = new javax.swing.GroupLayout(PanelSinTacc);
        PanelSinTacc.setLayout(PanelSinTaccLayout);
        PanelSinTaccLayout.setHorizontalGroup(
            PanelSinTaccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSinTaccLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelSinTaccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(BotonAgregarSinTacc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelSinTaccLayout.setVerticalGroup(
            PanelSinTaccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSinTaccLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAgregarSinTacc))
        );

        CatalogoItems.addTab("SIN TACC", PanelSinTacc);

        TablaBebida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categoria", "Nombre", "Precio", "Tamanio (mm)", "Mas Info"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaBebida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaBebidaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(TablaBebida);
        if (TablaBebida.getColumnModel().getColumnCount() > 0) {
            TablaBebida.getColumnModel().getColumn(0).setResizable(false);
            TablaBebida.getColumnModel().getColumn(1).setResizable(false);
            TablaBebida.getColumnModel().getColumn(2).setResizable(false);
            TablaBebida.getColumnModel().getColumn(3).setResizable(false);
            TablaBebida.getColumnModel().getColumn(4).setResizable(false);
            TablaBebida.getColumnModel().getColumn(4).setPreferredWidth(5);
        }

        BotonAgregarBebida.setText("Agregar Item Seleccionado");
        BotonAgregarBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarBebidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelBebidasLayout = new javax.swing.GroupLayout(PanelBebidas);
        PanelBebidas.setLayout(PanelBebidasLayout);
        PanelBebidasLayout.setHorizontalGroup(
            PanelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBebidasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(BotonAgregarBebida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelBebidasLayout.setVerticalGroup(
            PanelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBebidasLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAgregarBebida))
        );

        CatalogoItems.addTab("BEBIDAS", PanelBebidas);

        TablaBebidaAlcoholica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categoria", "Nombre", "Precio", "Tamanio (mm)", "Mas Info"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaBebidaAlcoholica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaBebidaAlcoholicaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(TablaBebidaAlcoholica);
        if (TablaBebidaAlcoholica.getColumnModel().getColumnCount() > 0) {
            TablaBebidaAlcoholica.getColumnModel().getColumn(0).setResizable(false);
            TablaBebidaAlcoholica.getColumnModel().getColumn(1).setResizable(false);
            TablaBebidaAlcoholica.getColumnModel().getColumn(2).setResizable(false);
            TablaBebidaAlcoholica.getColumnModel().getColumn(3).setResizable(false);
            TablaBebidaAlcoholica.getColumnModel().getColumn(4).setResizable(false);
            TablaBebidaAlcoholica.getColumnModel().getColumn(4).setPreferredWidth(5);
        }

        BotonAgregarBebidaAlcoholicas.setText("Agregar Item Seleccionado");
        BotonAgregarBebidaAlcoholicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarBebidaAlcoholicasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelBebidasConAlcoholLayout = new javax.swing.GroupLayout(PanelBebidasConAlcohol);
        PanelBebidasConAlcohol.setLayout(PanelBebidasConAlcoholLayout);
        PanelBebidasConAlcoholLayout.setHorizontalGroup(
            PanelBebidasConAlcoholLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBebidasConAlcoholLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelBebidasConAlcoholLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(BotonAgregarBebidaAlcoholicas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelBebidasConAlcoholLayout.setVerticalGroup(
            PanelBebidasConAlcoholLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBebidasConAlcoholLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAgregarBebidaAlcoholicas))
        );

        CatalogoItems.addTab("BEBIDAS ALCOHOLICAS", PanelBebidasConAlcohol);

        BotonGenerarItem.setText("Generar Items");
        BotonGenerarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGenerarItemActionPerformed(evt);
            }
        });

        TablaItemSeleccionado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Nombre", "Precio", "Cantidad", "DisminuirC", "AumentarC"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaItemSeleccionado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaItemSeleccionadoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaItemSeleccionado);
        if (TablaItemSeleccionado.getColumnModel().getColumnCount() > 0) {
            TablaItemSeleccionado.getColumnModel().getColumn(0).setResizable(false);
            TablaItemSeleccionado.getColumnModel().getColumn(1).setResizable(false);
            TablaItemSeleccionado.getColumnModel().getColumn(2).setResizable(false);
            TablaItemSeleccionado.getColumnModel().getColumn(3).setResizable(false);
            TablaItemSeleccionado.getColumnModel().getColumn(4).setResizable(false);
            TablaItemSeleccionado.getColumnModel().getColumn(5).setResizable(false);
        }

        BotonEliminarSeleccion.setText("Eliminar Seleccion");
        BotonEliminarSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarSeleccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonEliminarSeleccion))
                    .addComponent(CatalogoItems, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextoCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(BotonGenerarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TextoDni, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BCerrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BCrear)))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextoCuit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextoDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonGenerarItem)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(CatalogoItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonEliminarSeleccion))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BCerrar)
                    .addComponent(BCrear))
                .addContainerGap(66, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCerrarActionPerformed
      this.removeAll();
      this.revalidate();
      this.repaint();
    }//GEN-LAST:event_BCerrarActionPerformed

    private void TextoCuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoCuitActionPerformed

    }//GEN-LAST:event_TextoCuitActionPerformed

    private void BotonGenerarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGenerarItemActionPerformed
        String dniVend = TextoDni.getText();
        
        switch(opcion){
            case 0 ->  { // PLATOS
            List<Plato> listaPlatos = controllerpedido.obtenerPlatos(dniVend);
        
            DefaultTableModel modeloPlatos = (DefaultTableModel) TablaPlatos.getModel();
            modeloPlatos.setRowCount(0);
        
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(modeloPlatos);
            TablaPlatos.setRowSorter(sorter);
        
            for(Plato aux : listaPlatos){
                modeloPlatos.addRow(new Object[]{
                    aux.getCategoria().getDesc(),
                    aux.getNombre(),
                    aux.getPrecio(),
                    "+"
                    });
                }
            }
            case 1 -> { // Sin TACC
            List<Plato> listaPlatos = controllerpedido.obtenerPlatosSinTACC(dniVend);
        
            DefaultTableModel modeloPlatos = (DefaultTableModel) TablaPlatosSinTACC.getModel();
            modeloPlatos.setRowCount(0);
        
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(modeloPlatos);
            TablaPlatosSinTACC.setRowSorter(sorter);
        
            for(Plato aux : listaPlatos){
                modeloPlatos.addRow(new Object[]{
                    aux.getCategoria().getDesc(),
                    aux.getNombre(),
                    aux.getPrecio(),
                    "+"
                    });
                }    
            }
            case 2 ->  { // BEBIDAS
            List<Bebida> listaBebidas = controllerpedido.obtenerBebidasSinAlcohol(dniVend);
        
            DefaultTableModel modeloBebidas = (DefaultTableModel) TablaBebida.getModel();
            modeloBebidas.setRowCount(0);
        
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(modeloBebidas);
            TablaBebida.setRowSorter(sorter);
            
            for(Bebida aux : listaBebidas){
                modeloBebidas.addRow(new Object []{
                    aux.getCategoria().getDesc(),
                    aux.getNombre(),
                    aux.getPrecio(),
                    aux.getTamanio(),
                    "+"
                    });
                }
            break;
            }
            case 3 -> { //BEBIDAS ALCOHOLICAS
            List<Bebida> listaBebidas = controllerpedido.obtenerBebidasConAlcohol(dniVend);
        
            DefaultTableModel modeloBebidas = (DefaultTableModel) TablaBebidaAlcoholica.getModel();
            modeloBebidas.setRowCount(0);
        
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(modeloBebidas);
            TablaBebidaAlcoholica.setRowSorter(sorter);
            
            for(Bebida aux : listaBebidas){
                modeloBebidas.addRow(new Object []{
                    aux.getCategoria().getDesc(),
                    aux.getNombre(),
                    aux.getPrecio(),
                    aux.getTamanio(),
                    "+"
                    });
                }
            break;    
            }   
        } 
    }//GEN-LAST:event_BotonGenerarItemActionPerformed

    private void TablaPlatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPlatosMouseClicked
       int fila = TablaPlatos.rowAtPoint(evt.getPoint());
       int columna = TablaPlatos.columnAtPoint(evt.getPoint());
       String vegano;
       String vegetariano;
       
       if (columna == 3){
           System.out.println(fila);
           Plato aux = controllerpedido.obtenerPlato((String) TablaPlatos.getValueAt(fila, 1));
           if(aux.getAptoVegano()){
               vegano = "Si";
           } else vegano = "No";
           if(aux.getAptoVegetariano()){
               vegetariano = "Si";
           } else vegetariano = "No";
           
           JOptionPane.showMessageDialog(null, "Descripcion: "+ aux.getDescripcion() + "\n Calorias: "+aux.getCalorias() + "\n Vegetariano: " + vegetariano + "\n Vegano: " + vegano);
       }
    }//GEN-LAST:event_TablaPlatosMouseClicked

    private void CatalogoItemsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CatalogoItemsStateChanged
        JTabbedPane sourceTabbedPane = (JTabbedPane) evt.getSource();
        opcion = sourceTabbedPane.getSelectedIndex();
    }//GEN-LAST:event_CatalogoItemsStateChanged

    private void TablaBebidaAlcoholicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaBebidaAlcoholicaMouseClicked
       int fila = TablaBebidaAlcoholica.rowAtPoint(evt.getPoint());
       int columna = TablaBebidaAlcoholica.columnAtPoint(evt.getPoint());
       String vegano;
       
       if (columna == 4){
           System.out.println(fila);
           Bebida aux = controllerpedido.obtenerBebida((String) TablaBebidaAlcoholica.getValueAt(fila, 1));
           if(aux.aptoVegano()){
               vegano = "Si";
           } else vegano = "No";
           
           JOptionPane.showMessageDialog(null, "\n Descripcion: "+ aux.getDescripcion()+ "\n Tamanio: " + aux.getTamanio() + " ml" + "\n Graduacion Alcoholica: " + aux.getGraduacionAlcohol() + "\n Vegano: " + vegano);
       }
    }//GEN-LAST:event_TablaBebidaAlcoholicaMouseClicked

    private void TablaPlatosSinTACCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPlatosSinTACCMouseClicked
       int fila = TablaPlatosSinTACC.rowAtPoint(evt.getPoint());
       int columna = TablaPlatosSinTACC.columnAtPoint(evt.getPoint());
       String vegano;
       String vegetariano;
       
       if (columna == 3){
           System.out.println(fila);
           Plato aux = controllerpedido.obtenerPlato((String) TablaPlatosSinTACC.getValueAt(fila, 1));
           if(aux.getAptoVegano()){
               vegano = "Si";
           } else vegano = "No";
           if(aux.getAptoVegetariano()){
               vegetariano = "Si";
           } else vegetariano = "No";
           
           JOptionPane.showMessageDialog(null, "Descripcion: "+ aux.getDescripcion() + "\n Calorias: "+aux.getCalorias() + "\n Vegetariano: " + vegetariano + "\n Vegano: " + vegano);
       }
    }//GEN-LAST:event_TablaPlatosSinTACCMouseClicked

    private void TablaBebidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaBebidaMouseClicked
       int fila = TablaBebida.rowAtPoint(evt.getPoint());
       int columna = TablaBebida.columnAtPoint(evt.getPoint());
       String vegano;
       
       if (columna == 4){
           System.out.println(fila);
           Bebida aux = controllerpedido.obtenerBebida((String) TablaBebida.getValueAt(fila, 1));
           if(aux.aptoVegano()){
               vegano = "Si";
           } else vegano = "No";
           
           JOptionPane.showMessageDialog(null, "\n Descripcion: "+ aux.getDescripcion()+ "\n Tamanio: " + aux.getTamanio() + " ml" + "\n Vegano: " + vegano);
       }
    }//GEN-LAST:event_TablaBebidaMouseClicked

    private void BotonAgregarPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarPlatoActionPerformed
        int selectedRow = TablaPlatos.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Por favor, marque un plato para agregar");
        }
        else{
            agregarItemSeleccionado("PLATO",(String)TablaPlatos.getValueAt(selectedRow,1),(double)TablaPlatos.getValueAt(selectedRow,2));
        }
        
    }//GEN-LAST:event_BotonAgregarPlatoActionPerformed
    private void agregarItemSeleccionado(String Tipo,String nombre,double precio){
        DefaultTableModel modelTablaItemSeleccionado = (DefaultTableModel) TablaItemSeleccionado.getModel();
        if(rowExist(modelTablaItemSeleccionado, nombre)){
            JOptionPane.showMessageDialog(null, "Este plato ya ha sido agregado");
        }else{
            modelTablaItemSeleccionado.addRow(new Object[]{Tipo, nombre,precio,1, "-", "+"});
        }
    }
    private boolean rowExist(DefaultTableModel modelTable, String nombre){
        for(int i = 0; i <modelTable.getRowCount() ;i++){
            if(modelTable.getValueAt(i, 1).equals(nombre)) return true;
        }
        return false;
    }
    private void TablaItemSeleccionadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaItemSeleccionadoMouseClicked
       
    }//GEN-LAST:event_TablaItemSeleccionadoMouseClicked

    private void BotonEliminarSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarSeleccionActionPerformed
        int selectedRow = TablaItemSeleccionado.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null,"Debes seleccionar un item para eliminarlo");
        }else{
            DefaultTableModel modelTableItemSeleccionado = (DefaultTableModel) TablaItemSeleccionado.getModel();
            modelTableItemSeleccionado.removeRow(selectedRow);
            JOptionPane.showMessageDialog(null,"Se a eliminado el item de la seleccion");
        }
    }//GEN-LAST:event_BotonEliminarSeleccionActionPerformed

    private void BotonAgregarSinTaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarSinTaccActionPerformed
        int selectedRow = TablaPlatosSinTACC.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Por favor, marque un plato para agregar");
        }
        else{
            agregarItemSeleccionado("PLATO",(String)TablaPlatosSinTACC.getValueAt(selectedRow,1),(double)TablaPlatosSinTACC.getValueAt(selectedRow,2));
        }
    }//GEN-LAST:event_BotonAgregarSinTaccActionPerformed

    private void BotonAgregarBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarBebidaActionPerformed
        int selectedRow = TablaBebida.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Por favor, marque un bebida para agregar");
        }
        else{
            agregarItemSeleccionado("BEBIDA",(String)TablaBebida.getValueAt(selectedRow,1),(double)TablaBebida.getValueAt(selectedRow,2));
        }
    }//GEN-LAST:event_BotonAgregarBebidaActionPerformed

    private void BotonAgregarBebidaAlcoholicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarBebidaAlcoholicasActionPerformed
        int selectedRow = TablaBebidaAlcoholica.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Por favor, marque un bebida para agregar");
        }
        else{
            agregarItemSeleccionado("BEBIDA",(String)TablaBebidaAlcoholica.getValueAt(selectedRow,1),(double)TablaBebidaAlcoholica.getValueAt(selectedRow,2));
        }
    }//GEN-LAST:event_BotonAgregarBebidaAlcoholicasActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCerrar;
    private javax.swing.JButton BCrear;
    private javax.swing.JButton BotonAgregarBebida;
    private javax.swing.JButton BotonAgregarBebidaAlcoholicas;
    private javax.swing.JButton BotonAgregarPlato;
    private javax.swing.JButton BotonAgregarSinTacc;
    private javax.swing.JButton BotonEliminarSeleccion;
    private javax.swing.JButton BotonGenerarItem;
    private javax.swing.JTabbedPane CatalogoItems;
    private javax.swing.JPanel PanelBebidas;
    private javax.swing.JPanel PanelBebidasConAlcohol;
    private javax.swing.JPanel PanelPlatos;
    private javax.swing.JPanel PanelSinTacc;
    private javax.swing.JTable TablaBebida;
    private javax.swing.JTable TablaBebidaAlcoholica;
    private javax.swing.JTable TablaItemSeleccionado;
    private javax.swing.JTable TablaPlatos;
    private javax.swing.JTable TablaPlatosSinTACC;
    private javax.swing.JTextField TextoCuit;
    private javax.swing.JTextField TextoDni;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package isi.deso.tp.Paneles;

import isi.deso.controller.VendedorController;
import isi.deso.model.Coordenada;
import isi.deso.model.Vendedor;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Francisco
 */
public class SubPanelVendedorBuscar extends javax.swing.JPanel {

    VendedorController vcontroller = new VendedorController();
    Vendedor vendedor = new Vendedor();
    /**
     * Creates new form SubPanelVendedor
     */
    public SubPanelVendedorBuscar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IdentificacionVendedor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        MostrarTodosVendedores = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();

        IdentificacionVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdentificacionVendedorActionPerformed(evt);
            }
        });

        jLabel1.setText("Identificacion Vendedor");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "DNI", "Nombre", "Direccion", "Cooredenadas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        MostrarTodosVendedores.setText("Mostrar todos");
        MostrarTodosVendedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarTodosVendedoresActionPerformed(evt);
            }
        });

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IdentificacionVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MostrarTodosVendedores)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(IdentificacionVendedor)
                    .addComponent(MostrarTodosVendedores)
                    .addComponent(Buscar)
                    .addComponent(Editar)
                    .addComponent(Eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void IdentificacionVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdentificacionVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdentificacionVendedorActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
            String dniVendedor = IdentificacionVendedor.getText();
            Vendedor vendedor = vcontroller.buscarVendedor(dniVendedor);
            
            if(vendedor == null){
              JOptionPane.showMessageDialog(null, "No existe vendedor con el DNI introducido");
            } else {
                DefaultTableModel model = new DefaultTableModel(new Object[]{"Id", "Nombre", "Direccion", "Coordenadas"}, 0);
                int id = vendedor.getId();
                String dni = vendedor.getDni();
                String nombre = vendedor.getNombre();
                String direccion = vendedor.getDireccion();
                Coordenada coordenadas = vendedor.getCoordenada();
                String coordtext = "(" + coordenadas.getLat() + ", " + coordenadas.getLng() + ")";
                model.addRow(new Object[]{id, dni, nombre, direccion, coordtext});
                
                jTable1.setModel(model);
            }
            
    }//GEN-LAST:event_BuscarActionPerformed

    private void MostrarTodosVendedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarTodosVendedoresActionPerformed
        List<Vendedor> LVendedor = vcontroller.mostrarTodosVendedores();
        
        if(LVendedor == null) {
           JOptionPane.showMessageDialog(null, "No existen vendedores cargados en la BD");
        } else {
            DefaultTableModel model = new DefaultTableModel(new Object[]{"Id", "Nombre", "Direccion", "Coordenadas"}, 0);
            
            for(Vendedor vendedor : LVendedor) {
                int id = vendedor.getId();
                String dni = vendedor.getDni();
                String nombre = vendedor.getNombre();
                String direccion = vendedor.getDireccion();
                Coordenada coordenadas = vendedor.getCoordenada();
                String coordtext = "(" + coordenadas.getLat() + ", " + coordenadas.getLng() + ")";
                model.addRow(new Object[]{id, dni, nombre, direccion, coordtext});
            }
            
            jTable1.setModel(model);
        }
    }//GEN-LAST:event_MostrarTodosVendedoresActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        int row = jTable1.getSelectedRow();
       
        
        if(row == -1){
            JOptionPane.showMessageDialog(null, "Por favor, seleccione un vendedor de la tabla");
        }
        else {
            String dni = (String) jTable1.getValueAt(row, 1);
            
            JFrame ventana = new JFrame("Mi Ventana");
            ventana.setSize(470, 360);
        
        // Crear el panel y agregarlo a la ventana
        SubPanelVendedorModificar panel = new SubPanelVendedorModificar(dni);
        ventana.add(panel);
        
        // Hacer visible la ventana
        ventana.setVisible(true); 
        }
    }//GEN-LAST:event_EditarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        JFrame frame = new JFrame("Confirmar Eliminacion");
        frame.setSize(400, 300);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        int row = jTable1.getSelectedRow();
        
        
        if(row == -1){
            JOptionPane.showMessageDialog(null, "Por favor, seleccione un vendedor de la tabla");
        }
        else{
            int id = (int) jTable1.getValueAt(row, 0);
            int response = JOptionPane.showConfirmDialog(
                        frame,
                        "¿Estás seguro de que deseas eliminar al Vendedor?",
                        "Confirmar salida",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE
                );

                if (response == JOptionPane.YES_OPTION){
                    vcontroller.eliminarVendedor(id);
                }
        }
        
        
    }//GEN-LAST:event_EliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Editar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JTextField IdentificacionVendedor;
    private javax.swing.JButton MostrarTodosVendedores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

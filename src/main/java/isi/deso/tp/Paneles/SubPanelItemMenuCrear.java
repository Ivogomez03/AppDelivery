/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package isi.deso.tp.Paneles;

import isi.deso.controller.CategoriaController;
import isi.deso.controller.ItemMenuController;
import javax.swing.DefaultListModel;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Francisco
 */
public class SubPanelItemMenuCrear extends javax.swing.JPanel {
    private SubPanelItemMenuCaracteristicas1 PanelBebida;
    private SubPanelItemMenuCaracteristicas2 PanelComida;
    private String TipoItem;
    private ItemMenuController controllerItem = new ItemMenuController();
    private CategoriaController controllerCategoria = new CategoriaController();
    /**
     * Creates new form SubPanelVendedor
     */
    public SubPanelItemMenuCrear() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tipo_ItemMenu = new javax.swing.ButtonGroup();
        contenidoCaracteristicas1 = new javax.swing.JPanel();
        NombreItem = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CrearItem = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        precioItem = new javax.swing.JTextField();
        botonPlato = new javax.swing.JRadioButton();
        botonBebida = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcionItem = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        contenidoCaracteristicas = new javax.swing.JPanel();
        esVegano = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaCategoria = new javax.swing.JList<>();
        BotonAgregarCategoria = new javax.swing.JButton();
        DescripcionCategoriaNueva = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        contenidoCaracteristicas1.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout contenidoCaracteristicas1Layout = new javax.swing.GroupLayout(contenidoCaracteristicas1);
        contenidoCaracteristicas1.setLayout(contenidoCaracteristicas1Layout);
        contenidoCaracteristicas1Layout.setHorizontalGroup(
            contenidoCaracteristicas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );
        contenidoCaracteristicas1Layout.setVerticalGroup(
            contenidoCaracteristicas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );

        jLabel4.setText("Categorias");

        CrearItem.setText("Crear");
        CrearItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearItemActionPerformed(evt);
            }
        });

        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre");

        jLabel5.setText("Precio");

        precioItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioItemActionPerformed(evt);
            }
        });

        Tipo_ItemMenu.add(botonPlato);
        botonPlato.setText("Plato");
        botonPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPlatoActionPerformed(evt);
            }
        });

        Tipo_ItemMenu.add(botonBebida);
        botonBebida.setText("Bebida");
        botonBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBebidaActionPerformed(evt);
            }
        });

        jLabel1.setText("Descripcion");

        descripcionItem.setColumns(20);
        descripcionItem.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        descripcionItem.setRows(5);
        descripcionItem.setSelectionColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(descripcionItem);

        jLabel6.setText("Tipo");

        contenidoCaracteristicas.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout contenidoCaracteristicasLayout = new javax.swing.GroupLayout(contenidoCaracteristicas);
        contenidoCaracteristicas.setLayout(contenidoCaracteristicasLayout);
        contenidoCaracteristicasLayout.setHorizontalGroup(
            contenidoCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );
        contenidoCaracteristicasLayout.setVerticalGroup(
            contenidoCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );

        esVegano.setText("Vegano");
        esVegano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esVeganoActionPerformed(evt);
            }
        });

        ListaCategoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(ListaCategoria);

        BotonAgregarCategoria.setText("Agregar Categoria");
        BotonAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarCategoriaActionPerformed(evt);
            }
        });

        jLabel2.setText(" Categoria nueva");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Cerrar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NombreItem))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(precioItem))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(botonBebida, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonPlato, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(DescripcionCategoriaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BotonAgregarCategoria)))))
                        .addGap(81, 81, 81)
                        .addComponent(CrearItem))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contenidoCaracteristicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(esVegano))))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(botonPlato)
                                    .addComponent(botonBebida))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(contenidoCaracteristicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(esVegano)
                                .addGap(7, 7, 7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DescripcionCategoriaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonAgregarCategoria))
                        .addContainerGap(250, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(NombreItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precioItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CrearItem)
                            .addComponent(Cerrar))
                        .addGap(21, 21, 21))))
        );
    }// </editor-fold>//GEN-END:initComponents
      
    private void MostrarPanel(JPanel p){
        p.setSize(209, 96);
        p.setLocation(0,0);
        
        contenidoCaracteristicas.removeAll();
        contenidoCaracteristicas.add(p,BorderLayout.CENTER);
        contenidoCaracteristicas.revalidate();
        contenidoCaracteristicas.repaint();
    }
    
    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
      this.removeAll();
      this.revalidate();
      this.repaint();
    }//GEN-LAST:event_CerrarActionPerformed

    private void botonBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBebidaActionPerformed
       PanelBebida = new SubPanelItemMenuCaracteristicas1();
       MostrarPanel(PanelBebida);
       TipoItem = "Bebida";
       
       cargarLista(TipoItem);
       
    }//GEN-LAST:event_botonBebidaActionPerformed

    private void botonPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPlatoActionPerformed
       PanelComida = new SubPanelItemMenuCaracteristicas2();
       MostrarPanel(PanelComida);
       TipoItem = "Comida";
       
       cargarLista(TipoItem);
       
    }//GEN-LAST:event_botonPlatoActionPerformed

    private void precioItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioItemActionPerformed

    }//GEN-LAST:event_precioItemActionPerformed

    private void esVeganoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esVeganoActionPerformed
    
    }//GEN-LAST:event_esVeganoActionPerformed

    private void CrearItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearItemActionPerformed
        String nombreItem = getNombreItem();
        String descItem = getDescripcionItem();
        double precio = getPrecio();
        boolean esVegano = getVegano();
        String TipoItem = getTipo();
        double gradAlcohol;
        double tamanioBebida;
        boolean aptoVegetariano;
        boolean aptoCeliaco;
        double Calorias;
        
        if (nombreItem.isEmpty() || descItem.isEmpty() ) {
            JOptionPane.showMessageDialog(null, "Por favor complete todos los campos.");
            return;
        }

        if (precio == 0.0) {
            JOptionPane.showMessageDialog(null, "Precio debe ser valido.");
            return;
        }
        
        if(TipoItem.equals("Bebida")){
            if(PanelBebida.getAlcoholica()){
                gradAlcohol = PanelBebida.getGraduacion();
                tamanioBebida = PanelBebida.getTamanio();
                if (gradAlcohol == 0.0) {
                JOptionPane.showMessageDialog(null, "Inserte la graduación de alcohol.");
                return;
                }
            }
            else{
                gradAlcohol = 0;
                tamanioBebida = PanelBebida.getTamanio();
            }
            aptoVegetariano = false;
            aptoCeliaco = false;
            Calorias = 0;
        }
        else{
            aptoVegetariano = PanelComida.getAptoVegetariano();
            aptoCeliaco = PanelComida.getCeliaco();
            Calorias = PanelComida.getCalorias();
            gradAlcohol = 0;
            tamanioBebida = 0;
        }
        
        if(!botonBebida.isSelected() && !botonPlato.isSelected()){
            JOptionPane.showMessageDialog(null, "Seleccione un tipo de Item.");
            return;
        }
        else if(botonBebida.isSelected()){
            if (tamanioBebida == 0.0 || tamanioBebida < 0) {
            JOptionPane.showMessageDialog(null, "El tamanio debe ser valido.");
            return;
            }   
        }
        else if(botonPlato.isSelected()){
            if(Calorias == 0.0) {
            JOptionPane.showMessageDialog(null, "Inserte las Calorias.");
            return;    
            }
        }
        
        
        //controllerItem.CrearItem(nombreItem, descCategoria, precio, descItem, TipoItem, esVegano, gradAlcohol, tamanioBebida, aptoVegetariano, aptoCeliaco, Calorias);
    }//GEN-LAST:event_CrearItemActionPerformed

    private void BotonAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarCategoriaActionPerformed
        String descCategoria = getDescripcionCategoriaNueva();
        String TipoItem = getTipo();
        
        if(!botonBebida.isSelected() && !botonPlato.isSelected()){
            JOptionPane.showMessageDialog(null, "Seleccione un tipo de Item.");
            return;
        }
        
        controllerCategoria.crearCategoria(descCategoria, TipoItem);
    }//GEN-LAST:event_BotonAgregarCategoriaActionPerformed

    public String getNombreItem(){
        return this.NombreItem.getText();
    }

    public String getDescripcionItem(){
        return this.descripcionItem.getText();
    }
    public double getPrecio(){
        try{
            return Double.parseDouble(precioItem.getText()); 
       } catch (NumberFormatException e){
            return 0.0;
        }
    }
    public boolean getVegano(){
        return esVegano.isSelected();
    }
    public String getTipo(){
        if(botonBebida.isSelected()){
            return TipoItem = "Bebida";
        }
        else{
            return TipoItem = "Plato";
        }
    }
    
    public String getDescripcionCategoriaNueva(){
        return DescripcionCategoriaNueva.getText();
    }
    
    public void cargarLista(String tipoItem){
        DefaultListModel modeloLista = new DefaultListModel();//El modelo maneja el almacenamiento de la lista.
        
        List<String> lista = controllerCategoria.obtenerListaCategoria(tipoItem);//Se recupera de la base de datos las categorias ya cargadas con el tipo de item pasado por parametro.
        ListaCategoria.setModel(modeloLista);//Se setea el modelo definido en la JLista
        
        for(String categoria : lista){
           modeloLista.addElement(categoria);//Cada vez que se va a gregando un elemento la lista se va a actualizar automaticamente.
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAgregarCategoria;
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton CrearItem;
    private javax.swing.JTextField DescripcionCategoriaNueva;
    private javax.swing.JList<String> ListaCategoria;
    private javax.swing.JTextField NombreItem;
    private javax.swing.ButtonGroup Tipo_ItemMenu;
    private javax.swing.JRadioButton botonBebida;
    private javax.swing.JRadioButton botonPlato;
    private javax.swing.JPanel contenidoCaracteristicas;
    private javax.swing.JPanel contenidoCaracteristicas1;
    private javax.swing.JTextArea descripcionItem;
    private javax.swing.JCheckBox esVegano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField precioItem;
    // End of variables declaration//GEN-END:variables
}
